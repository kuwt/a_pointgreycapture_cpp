// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imagepack.proto

#include "imagepack.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_imagepack_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imagepack_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_imagepack_Mat;
}  // namespace protobuf_imagepack_2eproto
class imagepack_MatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<imagepack_Mat>
      _instance;
} _imagepack_Mat_default_instance_;
class imagepackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<imagepack>
      _instance;
} _imagepack_default_instance_;
namespace protobuf_imagepack_2eproto {
static void InitDefaultsimagepack_Mat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_imagepack_Mat_default_instance_;
    new (ptr) ::imagepack_Mat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imagepack_Mat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_imagepack_Mat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsimagepack_Mat}, {}};

static void InitDefaultsimagepack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_imagepack_default_instance_;
    new (ptr) ::imagepack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::imagepack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_imagepack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsimagepack}, {
      &protobuf_imagepack_2eproto::scc_info_imagepack_Mat.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_imagepack_Mat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_imagepack.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack_Mat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack_Mat, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack_Mat, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack_Mat, image_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack, imgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::imagepack, x_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::imagepack_Mat)},
  { 8, -1, sizeof(::imagepack)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_imagepack_Mat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_imagepack_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "imagepack.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017imagepack.proto\"n\n\timagepack\022\034\n\004imgs\030\001"
      " \003(\0132\016.imagepack.Mat\022\t\n\001x\030\002 \003(\r\0328\n\003Mat\022\r"
      "\n\005width\030\001 \001(\r\022\016\n\006height\030\002 \001(\r\022\022\n\nimage_d"
      "ata\030\003 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 137);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "imagepack.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_imagepack_2eproto

// ===================================================================

void imagepack_Mat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int imagepack_Mat::kWidthFieldNumber;
const int imagepack_Mat::kHeightFieldNumber;
const int imagepack_Mat::kImageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

imagepack_Mat::imagepack_Mat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imagepack_2eproto::scc_info_imagepack_Mat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imagepack.Mat)
}
imagepack_Mat::imagepack_Mat(const imagepack_Mat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_data().size() > 0) {
    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:imagepack.Mat)
}

void imagepack_Mat::SharedCtor() {
  image_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

imagepack_Mat::~imagepack_Mat() {
  // @@protoc_insertion_point(destructor:imagepack.Mat)
  SharedDtor();
}

void imagepack_Mat::SharedDtor() {
  image_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void imagepack_Mat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* imagepack_Mat::descriptor() {
  ::protobuf_imagepack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imagepack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const imagepack_Mat& imagepack_Mat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imagepack_2eproto::scc_info_imagepack_Mat.base);
  return *internal_default_instance();
}


void imagepack_Mat::Clear() {
// @@protoc_insertion_point(message_clear_start:imagepack.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool imagepack_Mat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imagepack.Mat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imagepack.Mat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imagepack.Mat)
  return false;
#undef DO_
}

void imagepack_Mat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imagepack.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->width(), output);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height(), output);
  }

  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->image_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imagepack.Mat)
}

::google::protobuf::uint8* imagepack_Mat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imagepack.Mat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->width(), target);
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height(), target);
  }

  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->image_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imagepack.Mat)
  return target;
}

size_t imagepack_Mat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imagepack.Mat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes image_data = 3;
  if (this->image_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image_data());
  }

  // uint32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void imagepack_Mat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imagepack.Mat)
  GOOGLE_DCHECK_NE(&from, this);
  const imagepack_Mat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const imagepack_Mat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imagepack.Mat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imagepack.Mat)
    MergeFrom(*source);
  }
}

void imagepack_Mat::MergeFrom(const imagepack_Mat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imagepack.Mat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_data().size() > 0) {

    image_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_data_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void imagepack_Mat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imagepack.Mat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void imagepack_Mat::CopyFrom(const imagepack_Mat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imagepack.Mat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool imagepack_Mat::IsInitialized() const {
  return true;
}

void imagepack_Mat::Swap(imagepack_Mat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void imagepack_Mat::InternalSwap(imagepack_Mat* other) {
  using std::swap;
  image_data_.Swap(&other->image_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata imagepack_Mat::GetMetadata() const {
  protobuf_imagepack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imagepack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void imagepack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int imagepack::kImgsFieldNumber;
const int imagepack::kXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

imagepack::imagepack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imagepack_2eproto::scc_info_imagepack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:imagepack)
}
imagepack::imagepack(const imagepack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      imgs_(from.imgs_),
      x_(from.x_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:imagepack)
}

void imagepack::SharedCtor() {
}

imagepack::~imagepack() {
  // @@protoc_insertion_point(destructor:imagepack)
  SharedDtor();
}

void imagepack::SharedDtor() {
}

void imagepack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* imagepack::descriptor() {
  ::protobuf_imagepack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imagepack_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const imagepack& imagepack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imagepack_2eproto::scc_info_imagepack.base);
  return *internal_default_instance();
}


void imagepack::Clear() {
// @@protoc_insertion_point(message_clear_start:imagepack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgs_.Clear();
  x_.Clear();
  _internal_metadata_.Clear();
}

bool imagepack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:imagepack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .imagepack.Mat imgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_imgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_x())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:imagepack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:imagepack)
  return false;
#undef DO_
}

void imagepack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:imagepack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .imagepack.Mat imgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->imgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->imgs(static_cast<int>(i)),
      output);
  }

  // repeated uint32 x = 2;
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _x_cached_byte_size_));
  }
  for (int i = 0, n = this->x_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->x(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:imagepack)
}

::google::protobuf::uint8* imagepack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:imagepack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .imagepack.Mat imgs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->imgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->imgs(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 x = 2;
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _x_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->x_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:imagepack)
  return target;
}

size_t imagepack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:imagepack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .imagepack.Mat imgs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->imgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->imgs(static_cast<int>(i)));
    }
  }

  // repeated uint32 x = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->x_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void imagepack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:imagepack)
  GOOGLE_DCHECK_NE(&from, this);
  const imagepack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const imagepack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:imagepack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:imagepack)
    MergeFrom(*source);
  }
}

void imagepack::MergeFrom(const imagepack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:imagepack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imgs_.MergeFrom(from.imgs_);
  x_.MergeFrom(from.x_);
}

void imagepack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:imagepack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void imagepack::CopyFrom(const imagepack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:imagepack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool imagepack::IsInitialized() const {
  return true;
}

void imagepack::Swap(imagepack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void imagepack::InternalSwap(imagepack* other) {
  using std::swap;
  CastToBase(&imgs_)->InternalSwap(CastToBase(&other->imgs_));
  x_.InternalSwap(&other->x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata imagepack::GetMetadata() const {
  protobuf_imagepack_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imagepack_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imagepack_Mat* Arena::CreateMaybeMessage< ::imagepack_Mat >(Arena* arena) {
  return Arena::CreateInternal< ::imagepack_Mat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::imagepack* Arena::CreateMaybeMessage< ::imagepack >(Arena* arena) {
  return Arena::CreateInternal< ::imagepack >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
